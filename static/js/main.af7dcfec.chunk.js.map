{"version":3,"sources":["components/display.js","components/searchBox.js","App.js","reportWebVitals.js","index.js"],"names":["Display","weatherData","loading","className","CircularProgress","color","name","src","icon","alt","temperature","description","humidity","time","country","region","SearchBox","handleSearch","search","setSearch","onSubmit","placeholder","value","onChange","e","target","onClick","App","apiKey","useState","lat","setLat","lon","setLon","setLoading","setWeatherData","useEffect","setTimeout","navigator","geolocation","getCurrentPosition","loc","coords","latitude","longitude","fetchData","a","axios","response","results","data","location","current","temp_c","condition","text","localtime","slice","console","log","preventDefault","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.af7dcfec.chunk.js","sourcesContent":["import React from 'react';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst Display = ({ weatherData, loading }) => {\r\n  return (\r\n    <div>\r\n      {loading ? (\r\n        <div className='flex flex-col justify-center items-center'>\r\n          <CircularProgress color='secondary' />\r\n        </div>\r\n      ) : (\r\n        <div className=' flex flex-col justify-center items-center display mt-8  rounded-xl  '>\r\n          <h1 className='text-5xl place uppercase p-3 '>{weatherData.name}</h1>\r\n          <div className='image h-full w-44  mb-1 p-4'>\r\n            <img src={weatherData.icon} className='icon w-44 ' alt='icon' />\r\n          </div>\r\n          <div className='mb-2 flex flex-col justify-center items-center'>\r\n            <h2 className='text-5xl'>{weatherData.temperature}Â°c</h2>\r\n            <h3 className='text-2xl'>{weatherData.description}</h3>\r\n            <h3 className='text-2xl'>Humid: {weatherData.humidity}</h3>\r\n            <h2>{weatherData.time}</h2>\r\n          </div>\r\n          <h2 className='text-lg p-4'>\r\n            {weatherData.country}, {weatherData.region}\r\n          </h2>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Display;\r\n","import React from 'react';\r\n\r\nconst SearchBox = ({ handleSearch, search, setSearch }) => {\r\n  return (\r\n    <div className='flex min-w-full justify-center items-center w-2/3 '>\r\n      <form\r\n        className='w-8/12 flex justify-center items-center'\r\n        onSubmit={handleSearch}\r\n      >\r\n        <input\r\n          placeholder='eg. (Miranda, Australia) or, (Adelaide)'\r\n          className='bg-white p-3 m-2 w-8/12 border-4 border-blue-500 border-opacity-50 shadow-xl outline-none '\r\n          value={search}\r\n          onChange={(e) => setSearch(e.target.value)}\r\n        />\r\n        <button\r\n          onClick={handleSearch}\r\n          className='inline-flex text-white hover:text-blue-500 bg-blue-500 hover:bg-white rounded-lg text-center h-auto w-auto p-3 m-2 search-btn focus:outline-none'\r\n        >\r\n          Search\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React, { useState, useEffect } from 'react';\nimport Display from './components/display';\nimport SearchBox from './components/searchBox';\nimport axios from 'axios';\n\nimport './App.css';\n\nconst App = () => {\n  const apiKey = '37039385b60f47fdaff90331211806';\n  const [lat, setLat] = useState(0);\n  const [lon, setLon] = useState(0);\n  const [loading, setLoading] = useState(true);\n  const [weatherData, setWeatherData] = useState({});\n  const [search, setSearch] = useState('');\n\n  useEffect(() => {\n    setTimeout(() => {\n      //For spinner to load\n      navigator.geolocation.getCurrentPosition((loc) => {\n        setLat(loc.coords.latitude);\n        setLon(loc.coords.longitude);\n      });\n    }, 1000);\n    if (lat !== 0 && lon !== 0) {\n      fetchData();\n    }\n  }, [lat, lon]);\n\n  const fetchData = async () => {\n    try {\n      const response = await axios(\n        `https://api.weatherapi.com/v1/current.json?key=${apiKey}&q=${\n          search === '' ? lat + ',' + lon : search\n        }`\n      );\n\n      setLoading(false);\n      const results = response.data;\n      setWeatherData({\n        name: results.location.name,\n        country: results.location.country,\n        region: results.location.region,\n        temperature: results.current.temp_c,\n        description: results.current.condition.text,\n        icon: results.current.condition.icon,\n        humidity: results.current.humidity,\n        time: results.location.localtime.slice(11),\n      });\n      console.log(response);\n    } catch (error) {\n      console.log(error);\n      setWeatherData({\n        name: `Invalid City \\\\ Country name. Please Try again`,\n      });\n    }\n  };\n\n  const handleSearch = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    fetchData();\n    setLoading(false);\n  };\n\n  return (\n    <div>\n      <header className='p-4 '>\n        <h1 className='app-title text-6xl font-bold text-blue-700  flex justify-center items-center h-28'>\n          Weather App\n        </h1>\n      </header>\n      <div className='h-auto '>\n        <div className=' flex justify-center items-center  h-24 outline-none'>\n          <SearchBox\n            handleSearch={handleSearch}\n            search={search}\n            setSearch={setSearch}\n          />\n        </div>\n        <Display weatherData={weatherData} loading={loading} apiKey={apiKey} />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}